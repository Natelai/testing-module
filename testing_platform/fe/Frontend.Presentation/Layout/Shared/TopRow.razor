@using Frontend.Presentation.Pages.Modals
@using Frontend.Presentation.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject DialogService DialogService

<RadzenStack Orientation="Orientation.Horizontal"
    Style="height: 100%; width: 100%; display: flex !important; align-items:center !important;
        justify-content: space-between !important; background-color: #8AABD0;padding:0;padding-left:10px">
    
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenText Text="VLSE" @onclick=@(() => NavigationManager.NavigateTo("/")) 
                    Style="margin: unset;display: flex;align-items: center;font-size: 28px;color: #000;font-weight: 700;cursor: pointer"/>
    </RadzenStack>
    
    <RadzenStack Orientation="Orientation.Horizontal" Gap="20px">
        
        <RadzenStack Orientation="Orientation.Horizontal" Gap="10px" Style="padding: 0 5px">
            <RadzenButton Text="Premium" Icon="star" IconColor="#000000" Click="ShowPremiumDialog"
                          Style="border:1px solid #000000;color:#000000;background-color: #FFCC00;box-shadow: unset" />
            
            <RadzenButton Icon="notifications" IconColor="#000000"  
                          Style="background-color: transparent;box-shadow: unset" />

            <RadzenButton Icon="account_circle" IconColor="#000000" Click=@(() => NavigationManager.NavigateTo("/account"))
                          Style="background-color: transparent;box-shadow: unset" />

        </RadzenStack>

        <RadzenButton Click="Logout" Icon="logout" IconColor="#000000"
                      Style="background-color: transparent; box-shadow: unset; width: 20px; margin-right: 10px;color:#000000"/>
    </RadzenStack>

    
</RadzenStack>

@code {

    private string? _userName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _userName = await AuthService.GetUsernameFromToken();
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/login");
    }

    private async Task ShowPremiumDialog()
    {
        await DialogService.OpenAsync<BuyPremiumModal>("",
            new Dictionary<string, object>(),
            new DialogOptions() 
            {
                ShowTitle = false,
                Resizable = false, 
                Draggable = true,
                Width="1000px",
                ShowClose = true,
            });

    }
}
